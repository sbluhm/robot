<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="diffbot_ros2_control" params="name prefix use_mock_hardware">
    <ros2_control name="${name}" type="system">
      <xacro:unless value="${use_mock_hardware}">
        <hardware>
          <plugin>bluhmbot/DiffBotSystemHardware</plugin>
          <param name="example_param_hw_start_duration_sec">0</param>
          <param name="example_param_hw_stop_duration_sec">3.0</param>
        </hardware>
      </xacro:unless>
      <xacro:if value="${use_mock_hardware}">
        <hardware>
          <plugin>mock_components/GenericSystem</plugin>
          <param name="calculate_dynamics">true</param>
        </hardware>
      </xacro:if>
      <joint name="${prefix}left_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="${prefix}right_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control>
  </xacro:macro>

  <xacro:macro name="utility_motors_ros2_control" params="name prefix use_mock_hardware">
    <ros2_control name="${name}brush" type="system">
      <xacro:unless value="${use_mock_hardware}">
        <hardware>
          <plugin>bluhmbot/UtilityMotorHardware</plugin>
          <!-- Raspberry Pi PWM sysfs params (adjust to your board setup) -->
          <param name="pwm_in1">19</param>
          <param name="pwm_in2">15</param>
          <param name="frequency">2000</param> <!-- 2 kHz -->
          <param name="invert_dir">false</param>
          <!-- Effort mapping + simple sim -->
          <param name="min_effort">0.0</param>
          <param name="max_effort">0.5</param>
        </hardware>
      </xacro:unless>
      <xacro:if value="${use_mock_hardware}">
        <hardware>
          <plugin>mock_components/GenericSystem</plugin>
          <param name="calculate_dynamics">true</param>
        </hardware>
      </xacro:if>

      <joint name="${prefix}brush_motor">
        <command_interface name="effort"/>
	<state_interface name="effort"/>
	<state_interface name="position"/>
      </joint>
    </ros2_control>

    <ros2_control name="${name}cutter" type="system">
      <xacro:unless value="${use_mock_hardware}">
        <hardware>
          <plugin>bluhmbot/UtilityMotorHardware</plugin>
          <!-- Raspberry Pi PWM sysfs params (adjust to your board setup) -->
          <param name="pwm_in1">18</param>
          <param name="pwm_in2">14</param>
          <param name="frequency">2000</param> <!-- 2 kHz -->
          <param name="invert_dir">false</param>
          <!-- Effort mapping + simple sim -->
          <param name="min_effort">0.0</param>
          <param name="max_effort">100.0</param>
        </hardware>
      </xacro:unless>
      <xacro:if value="${use_mock_hardware}">
        <hardware>
          <plugin>mock_components/GenericSystem</plugin>
          <param name="calculate_dynamics">true</param>
        </hardware>
      </xacro:if>

      <joint name="${prefix}cutter_motor">
        <command_interface name="effort"/>
	<state_interface name="effort"/>
	<state_interface name="position"/>
      </joint>
    </ros2_control>

  </xacro:macro>
</robot>
